apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: multipoll-postgres
  name: multipoll-postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    io.kompose.service: multipoll-postgres
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: multipoll-postgres
  name: multipoll-postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      io.kompose.service: multipoll-postgres
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        io.kompose.service: multipoll-postgres
    spec:
      containers:
        - image: postgres
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
          name: multipoll-postgres
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postresql/data/
              name: multipoll-postgres-claim
      restartPolicy: Always
      volumes:
      - name: multipoll-postgres-claim
        persistentVolumeClaim:
          claimName: multipoll-postgres-claim
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: multipoll-postgres-claim
  name: multipoll-postgres-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
